     1                                  section .data
     2 00000000 7B                          bNum    db 123
     3 00000001 3930                        wNum    dw 12345
     4 00000003 D2029649                    dNum    dd 1234567890
     5 00000007 1581E97DF4102211            qNum1   dq 1234567890123456789
     6 0000000F 40E2010000000000            qNum2   dq 123456
     7 00000017 1F85EB51B81E0940            qNum3   dq 3.14
     8                                  
     9                                  section .bss
    10                                  section .text
    11                                      global main
    12                                  main:
    13 00000000 55                          push    rbp
    14 00000001 4889E5                      mov     rbp, rsp
    15                                  
    16 00000004 48C7C0FFFFFFFF              mov     rax, -1             ; fill rax with all 1 bits for 8bytes.
    17 0000000B 8A0425[00000000]            mov     al, byte [bNum]     ; Wrong value
    18                                  
    19 00000012 4831C0                      xor     rax, rax
    20 00000015 8A0425[00000000]            mov     al, byte [bNum]     ; now correct 1byte value
    21                                  
    22 0000001C 48C7C0FFFFFFFF              mov     rax, -1             ; rax is quadword size.
    23 00000023 668B0425[01000000]          mov     ax, word [wNum]     ; Wrong value
    24                                  
    25 0000002B 4831C0                      xor     rax, rax
    26 0000002E 668B0425[01000000]          mov     ax, word [wNum]     ; now correct 2bytes value
    27                                  
    28 00000036 48C7C0FFFFFFFF              mov     rax, -1
    29 0000003D 8B0425[03000000]            mov     eax, dword [dNum]   ; does clear the upper bits
    30                                  
    31 00000044 48C7C0FFFFFFFF              mov     rax, -1
    32 0000004B 488B0425[07000000]          mov     rax, qword [qNum1]  ; does clear
    33                                      
    34                                      ; save register addr to qNums's value
    35 00000053 48890425[0F000000]          mov     qword [qNum2], rax  ; one operand always a register
    36                                  
    37                                      ; dest based size value storing
    38 0000005B B840E20100                  mov     rax, 123456         ; source operand an immediate value
    39                                  
    40 00000060 F30F7E0425-                 movq    xmm0, [qNum3]       ; instrunction for float points
    40 00000065 [17000000]         
    41                                  end:
    42 00000069 4889EC                      mov     rsp, rbp
    43 0000006C 5D                          pop     rbp
    44 0000006D C3                          ret
